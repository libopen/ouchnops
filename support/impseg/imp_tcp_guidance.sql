delete eas_COURSE_BASICINFO  where courseid='04000';

MERGE INTO eas_COURSE_BASICINFO A 
using  BKCOURSE_BASICINFO B
ON (A.SN = B.SN)
WHEN NOT MATCHED THEN 
INSERT (
  SN, COURSEID, COURSENAME, ABBREVIATION, MNEMONIC, 
  COURSELEVEL, COURSETYPE, ORGCODE, DEPARTMENT, TEACHER, 
  CREDIT, HOURTYPE, HOUR, SUBJECT, CATEGORIES, 
  STATE, APPLICATIONTIME, AUDITTIME, CREATETIME, MODIFYOPERATOR, 
  MODIFYDATETIME, ISVALIDCREDIT)
VALUES (
  B.SN, B.COURSEID, B.COURSENAME, B.ABBREVIATION, B.MNEMONIC, 
  B.COURSELEVEL, B.COURSETYPE, B.ORGCODE, B.DEPARTMENT, B.TEACHER, 
  B.CREDIT, B.HOURTYPE, B.HOUR, B.SUBJECT, B.CATEGORIES, 
  B.STATE, B.APPLICATIONTIME, B.AUDITTIME, B.CREATETIME, B.MODIFYOPERATOR, 
  B.MODIFYDATETIME, B.ISVALIDCREDIT);

COMMIT;

MERGE INTO OUCHNSYS.EAS_TCP_GUIDANCE A USING
OUCHNSYS.EAS_TCP_GUIDANCE1  B
ON (A.TCPCODE = B.TCPCODE)
WHEN NOT MATCHED THEN 
INSERT (
  TCPCODE, BATCHCODE, TCPNAME, EDUCATIONTYPE, STUDENTTYPE, 
  PROFESSIONALLEVEL, SPYCODE, MINGRADCREDITS, MINEXAMCREDITS, EXEMPTIONMAXCREDITS, 
  SCHOOLSYSTEM, DEGREECOLLEGEID, DEGREESEMESTER, REMARK, STATE, 
  COPYSOURCECODE, CREATOR, CREATETIME, ENABLEUSER, ENABLETIME, 
  ORGCODE, EASDEGSN)
VALUES (
  B.TCPCODE, B.BATCHCODE, B.TCPNAME, B.EDUCATIONTYPE, B.STUDENTTYPE, 
  B.PROFESSIONALLEVEL, B.SPYCODE, B.MINGRADCREDITS, B.MINEXAMCREDITS, B.EXEMPTIONMAXCREDITS, 
  B.SCHOOLSYSTEM, B.DEGREECOLLEGEID, B.DEGREESEMESTER, B.REMARK, B.STATE, 
  B.COPYSOURCECODE, B.CREATOR, B.CREATETIME, B.ENABLEUSER, B.ENABLETIME, 
  B.ORGCODE, B.EASDEGSN);
  
  commit;
  
  MERGE INTO OUCHNSYS.EAS_TCP_MODULE A USING
 OUCHNSYS.EAS_TCP_MODULE1 B
ON (A.tcpcode = B.tcpcode and a.modulecode=b.modulecode)
WHEN NOT MATCHED THEN 
INSERT (
  SN, BATCHCODE, TCPCODE, MODULECODE, MINGRADCREDITS, 
  MINEXAMCREDITS, CREATETIME)
VALUES (
  B.SN, B.BATCHCODE, B.TCPCODE, B.MODULECODE, B.MINGRADCREDITS, 
  B.MINEXAMCREDITS, B.CREATETIME);
  
  commit;
  
  MERGE INTO OUCHNSYS.EAS_TCP_MODULECOURSES A USING
 OUCHNSYS.EAS_TCP_MODULECOURSES1 B
ON (A.tcpcode = B.tcpcode and a.modulecode=b.modulecode and a.courseid=b.courseid)
WHEN NOT MATCHED THEN 
INSERT (
  SN, MODULECODE, BATCHCODE, TCPCODE, COURSEID, 
  COURSENAME, COURSENATURE, ORGCODE, CREDIT, HOUR, 
  OPENEDSEMESTER, EXAMUNITTYPE, ISEXTENDEDCOURSE, ISDEGREECOURSE, ISSIMILAR, 
  ISMUTEX, CREATETIME)
VALUES (
  B.SN, B.MODULECODE, B.BATCHCODE, B.TCPCODE, B.COURSEID, 
  B.COURSENAME, B.COURSENATURE, B.ORGCODE, B.CREDIT, B.HOUR, 
  B.OPENEDSEMESTER, B.EXAMUNITTYPE, B.ISEXTENDEDCOURSE, B.ISDEGREECOURSE, B.ISSIMILAR, 
  B.ISMUTEX, sysdate)
---where b.tcpcode in ('170901202010400','170901211020200','170901411020106','170901411020201')  
  
 commit;
 
 merge into eas_tcp_modulecourses a 
using
 (
select d.sn,d.courseid,D.ISDEGREECOURSE,a.tcpcode,b.collegeid,b.batchcode,b.coursename from eas_tcp_guidance a 
inner join eas_tcp_degreecurriculums b on A.DEGREECOLLEGEID=B.COLLEGEID and A.DEGREESEMESTER=b.batchcode
inner join eas_tcp_degreerule c on B.DEGREERULEID=C.SN and A.SPYCODE=c.spycode
inner join eas_tcp_modulecourses d on a.tcpcode=d.tcpcode 
and b.courseid=d.courseid
where degreecollegeid is not null and  D.ISDEGREECOURSE='0' 
--and a.tcpcode='180301202010400'
) b on (a.sn=b.sn)
when matched then
update set ISDEGREECOURSE='1'

commit;